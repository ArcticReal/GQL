import {
  GraphQLSchema,
  GraphQLObjectType,
  GraphQLInputObjectType,
  GraphQLInt,
  GraphQLFloat,
  GraphQLString,
  GraphQLBoolean,
  GraphQLList,
} from 'graphql';

const ProductResponseType = new GraphQLObjectType({
  name: 'ProductResponseType',
  description: 'response type for Product',

  fields: () => ({
    amountUomTypeId: {type: GraphQLString},
    autoCreateKeywords: {type: GraphQLBoolean},
    billOfMaterialLevel: {type: GraphQLInt},
    brandName: {type: GraphQLString},
    chargeShipping: {type: GraphQLBoolean},
    comments: {type: GraphQLString},
    configId: {type: GraphQLString},
    createdByUserLogin: {type: GraphQLString},
    createdDate: {type: GraphQLString},
    defaultShipmentBoxTypeId: {type: GraphQLString},
    depthUomId: {type: GraphQLString},
    description: {type: GraphQLString},
    detailImageUrl: {type: GraphQLString},
    detailScreen: {type: GraphQLString},
    diameterUomId: {type: GraphQLString},
    facilityId: {type: GraphQLString},
    fixedAmount: {type: GraphQLFloat},
    heightUomId: {type: GraphQLString},
    inShippingBox: {type: GraphQLBoolean},
    includeInPromotions: {type: GraphQLBoolean},
    internalName: {type: GraphQLString},
    introductionDate: {type: GraphQLString},
    inventoryItemTypeId: {type: GraphQLString},
    inventoryMessage: {type: GraphQLString},
    isVariant: {type: GraphQLBoolean},
    isVirtual: {type: GraphQLBoolean},
    largeImageUrl: {type: GraphQLString},
    lastModifiedByUserLogin: {type: GraphQLString},
    lastModifiedDate: {type: GraphQLString},
    longDescription: {type: GraphQLString},
    lotIdFilledIn: {type: GraphQLString},
    manufacturerPartyId: {type: GraphQLString},
    mediumImageUrl: {type: GraphQLString},
    orderDecimalQuantity: {type: GraphQLBoolean},
    originGeoId: {type: GraphQLString},
    originalImageUrl: {type: GraphQLString},
    piecesIncluded: {type: GraphQLInt},
    priceDetailText: {type: GraphQLString},
    primaryProductCategoryId: {type: GraphQLString},
    productDepth: {type: GraphQLFloat},
    productDiameter: {type: GraphQLFloat},
    productHeight: {type: GraphQLFloat},
    productId: {type: GraphQLString},
    productName: {type: GraphQLString},
    productRating: {type: GraphQLFloat},
    productTypeId: {type: GraphQLString},
    productWeight: {type: GraphQLFloat},
    productWidth: {type: GraphQLFloat},
    quantityIncluded: {type: GraphQLFloat},
    quantityUomId: {type: GraphQLString},
    ratingTypeEnum: {type: GraphQLString},
    releaseDate: {type: GraphQLString},
    requireAmount: {type: GraphQLBoolean},
    requireInventory: {type: GraphQLBoolean},
    requirementMethodEnumId: {type: GraphQLString},
    reserv2ndPPPerc: {type: GraphQLFloat},
    reservMaxPersons: {type: GraphQLFloat},
    reservNthPPPerc: {type: GraphQLFloat},
    returnable: {type: GraphQLBoolean},
    salesDiscWhenNotAvail: {type: GraphQLBoolean},
    salesDiscontinuationDate: {type: GraphQLString},
    shippingDepth: {type: GraphQLFloat},
    shippingHeight: {type: GraphQLFloat},
    shippingWeight: {type: GraphQLFloat},
    shippingWidth: {type: GraphQLFloat},
    smallImageUrl: {type: GraphQLString},
    supportDiscontinuationDate: {type: GraphQLString},
    taxable: {type: GraphQLBoolean},
    variant: {type: GraphQLBoolean},
    virtual: {type: GraphQLBoolean},
    virtualVariantMethodEnum: {type: GraphQLString},
    weightUomId: {type: GraphQLString},
    widthUomId: {type: GraphQLString}
  })
});

export {ProductResponseType};
    